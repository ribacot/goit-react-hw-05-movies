{"version":3,"file":"static/js/397.1c70b0e6.chunk.js","mappings":"yPAEA,aAAe,OAAf,oBAAe,6GAEQA,EAAAA,EAAAA,QAAiB,CAClCC,IAAI,wBAHK,cAELC,EAFK,yBAKJA,EAAKC,KAAKC,SALN,gCAOXC,QAAQC,IAAR,MAPW,gFCDf,OAAgB,KAAO,8B,0BCMR,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eASA,OAPAC,EAAAA,EAAAA,YAAU,WACJJ,EAAOK,QFVA,WAAf,+BEWIC,GACGC,MAAK,SAAAC,GAAC,OAAIP,EAAUO,EAAd,IACNC,OAAM,SAAAC,GAAC,OAAId,QAAQC,IAAIa,EAAhB,GACX,GAAE,CAACV,EAAOK,UAGT,gBAAKM,UAAU,UAAf,UACE,oBAASC,MAAO,CAAEC,WAAW,GAAD,OAAKV,EAAU,GAAf,OAA5B,UACE,UAACW,EAAA,EAAD,YACE,eAAIH,UAAWI,EAAAA,MAAf,+BACGf,EAAOK,SAAU,SAACW,EAAA,QAAD,CAAYhB,OAAQA,UAKjD,C,uFC3BD,EAA4B,6BAA5B,EAAqE,6BAArE,EAAgH,+BAAhH,EAA8J,gC,SCA/I,SAASiB,EAAT,GAAiC,IAAVC,EAAS,EAATA,MAC5BC,EAAmDD,EAAnDC,YAAaC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,aAAcC,EAAiBJ,EAAjBI,aAK1C,OADA1B,QAAQC,IAAI,eAAgBwB,EAAaE,QAAQ,KAE/C,+BACE,iBAAKZ,UAAWI,EAAhB,WACE,gBACES,IACEL,EAAW,0CAC4BA,GAT/C,8EAYMM,IAAI,SACJb,MAAO,CAAEc,MAAO,IAAKC,OAAQ,KAC7BhB,UAAWI,KAEb,gBAAKJ,UAAWI,EAAhB,UACE,uBAAIK,OAEN,iBAAKT,UAAWI,EAAhB,WACE,oCAAYM,EAAaE,QAAQ,OACjC,qCAAaD,YAKtB,CC7BD,OAAiB,ECGF,SAASN,EAAT,GAAiC,IAAXhB,EAAU,EAAVA,OAC7B4B,GAAWC,EAAAA,EAAAA,MAEjB,OADAjC,QAAQC,IAAIG,IAEV,eAAIW,UAAU,cAAd,SACS,OAANX,QAAM,IAANA,GAAAA,EAAQK,OAAR,OACCL,QADD,IACCA,OADD,EACCA,EAAQ8B,KAAI,SAACZ,GAAD,OACV,eAAmBP,UAAU,OAA7B,UACE,SAAC,KAAD,CAAMoB,GAAE,yBAAoBb,EAAMc,IAAMC,MAAO,CAAEC,KAAMN,GAAYjB,UAAWI,EAAAA,UAA9E,UACE,SAAC,EAAD,CAAWG,MAAOA,OAFbA,EAAMc,GADL,KAQZ,uCAIP,C,0DCpBazC,E,OAAW4C,EAAAA,OAAa,CACrCC,QAAQ,gCACRC,OAAQ,MACPC,QAAS,CACP,OAAU,mBACZ,cAAgB,+N","sources":["components/service/serviseTrandingMovies.js","webpack://react-homework-template/./src/Pages/TrandingMovies/TrandingMovies.module.css?a9b6","Pages/TrandingMovies/TrandingMovies.jsx","webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","components/ListMovies/ListMovies.module.css","components/ListMovies/ListMovies.jsx","components/service/serviseBaseApi.js"],"sourcesContent":["import { movieApi } from './serviseBaseApi';\n\nexport default async function serviseTrandingMovies() {\n  try {\n    const resp = await movieApi.request({\n      url: `/trending/movie/day`,\n    });\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"TrandingMovies_link__a5TC4\"};","import { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport serviseTrandingMovies from 'components/service/serviseTrandingMovies';\nimport css from './TrandingMovies.module.css';\nimport Container from 'components/Container/Container';\nimport ListMovies from 'components/ListMovies/ListMovies';\n\nexport default function TrandingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [padding] = useOutletContext();\n\n  useEffect(() => {\n    if (movies.length) return;\n    serviseTrandingMovies()\n      .then(r => setMovies(r))\n      .catch(e => console.log(e));\n  }, [movies.length]);\n  \n  return (\n    <div className=\"bacdrop\">\n      <section style={{ paddingTop: `${padding + 10}px` }}>\n        <Container>\n          <h1 className={css.title}>Trending Movies</h1>\n          {!!movies.length && <ListMovies movies={movies} />}\n        </Container>\n      </section>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"decor_img\":\"MovieItem_decor_img__jYn0u\",\"linkMovie\":\"MovieItem_linkMovie__egqNh\",\"posterTitle\":\"MovieItem_posterTitle__XPgb1\",\"posterRating\":\"MovieItem_posterRating__xGiK3\"};","import css from './MovieItem.module.css';\nexport default function TradingItem({ movie }) {\n  const { poster_path, title, vote_average, release_date } = movie;\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  console.log('vote_average', vote_average.toFixed(1));\n  return (\n    <>\n      <div className={css.decor_img}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n              : defaultImg\n          }\n          alt=\"poster\"\n          style={{ width: 230, height: 345 }}\n          className={css.linkMovie}\n        />\n        <div className={css.posterTitle}>\n          <p>{title}</p>\n        </div>\n        <div className={css.posterRating}>\n          <p>Rating: {vote_average.toFixed(1)}</p>\n          <p>Release: {release_date}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport css from './ListMovies.module.css'\n\nexport default function ListMovies({ movies }) {\n  const location = useLocation();\n  console.log(movies)\n  return (\n    <ul className=\"list_movies\">\n      {movies?.length ? (\n        movies?.map((movie) => (\n          <li key={movie.id} className=\"link\">\n            <Link to={`/selectedmovie/${movie.id}`} state={{ from: location }} className={css.linkMovie}>\n              <MovieItem movie={movie}/>\n            </Link>\n          </li>\n        ))\n      ) : (\n        <h2>No movies</h2>\n      )}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nexport  const movieApi = axios.create({\n baseURL:'https://api.themoviedb.org/3/',\n method: 'get',\n  headers: {\n    'accept': 'application/json',\n  'Authorization':'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYzY0NTBkYTE3OWZlNDIxY2Y5NzQyYWU2OWEzM2RlNCIsInN1YiI6IjY0ZGI1NWJmMDAxYmJkMDBlMzVkMzc1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QMhBhXm6B0N1kwqvUOCBJyHASuDqGrhcINSUolbmq0w',\n},\n})\n"],"names":["movieApi","url","resp","data","results","console","log","TrandingMovies","useState","movies","setMovies","useOutletContext","padding","useEffect","length","serviseTrandingMovies","then","r","catch","e","className","style","paddingTop","Container","css","ListMovies","TradingItem","movie","poster_path","title","vote_average","release_date","toFixed","src","alt","width","height","location","useLocation","map","to","id","state","from","axios","baseURL","method","headers"],"sourceRoot":""}