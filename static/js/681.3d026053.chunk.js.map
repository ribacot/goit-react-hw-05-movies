{"version":3,"file":"static/js/681.3d026053.chunk.js","mappings":"uQAEaA,EAAS,mCAAG,WAAMC,GAAN,gGAEFC,EAAAA,EAAAA,QAAiB,CAClCC,IAAI,UAAD,OAAYF,KAHI,cAEfG,EAFe,yBAKdA,EAAKC,MALS,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,sD,SCDtB,GAAgB,iBAAmB,wCAAwC,YAAc,mCAAmC,SAAW,gCAAgC,UAAY,iCAAiC,OAAS,8BAA8B,IAAM,2BAA2B,QAAU,+BAA+B,MAAQ,8B,SCa9T,SAASC,IAAiB,IAAD,IAC9BP,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAA0BS,EAAAA,EAAAA,UAAS,CAAEC,OAAQ,GAAIC,YAAa,KAA9D,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACrDd,QAAQC,IAAI,KAAKN,IAIfoB,EAAAA,EAAAA,YAAU,WACHpB,GACLD,EAAUC,GAAIqB,MAAK,SAAAC,GAAC,OAAIT,EAASS,EAAb,IAAiBC,OAAM,SAAAC,GAAC,OAAEnB,QAAQC,IAAIkB,EAAd,GAC7C,GAAE,CAACxB,IACJ,IAAQyB,EAA2Db,EAA3Da,MAAOd,EAAoDC,EAApDD,YAAae,EAAuCd,EAAvCc,SAAUhB,EAA6BE,EAA7BF,OAAQiB,EAAqBf,EAArBe,OAAQC,EAAahB,EAAbgB,SAEtD,OACE,+BACI,gBAAKC,UAAU,UAAf,UACE,oBAASA,UAAWC,EAAAA,iBAApB,UACE,UAACC,EAAA,EAAD,CAAWC,OAAQF,EAAAA,mBAAnB,WACE,SAAC,KAAD,CAAMG,GAAIjB,EAAYkB,QAASL,UAAU,UAAzC,UACE,SAACM,EAAA,EAAD,yBAEF,wBAAKV,KAEL,iBAAKI,UAAWC,EAAAA,YAAhB,WACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,0BACE,gBACEM,IACEzB,EAAW,0CAC4BA,GAxB3D,8EA2BkB0B,IAAKZ,EACLa,MAAO,SAGX,iBAAKT,UAAWC,EAAAA,OAAhB,WACE,sCACU,0BAAOH,OAGhBC,IACC,cAAGW,KAAMX,EAAUY,OAAO,QAA1B,UACE,SAACL,EAAA,EAAD,CAAQH,OAAQF,EAAAA,QAAhB,2BAKN,iBAAKD,UAAWC,EAAAA,IAAhB,WACE,SAAC,KAAD,CAASG,GAAG,OAAOJ,UAAU,UAA7B,UACE,SAACM,EAAA,EAAD,sBAEF,SAAC,KAAD,CAASF,GAAG,UAAUJ,UAAU,UAAhC,UACE,SAACM,EAAA,EAAD,+BAIN,2BACGzB,EAAO+B,QACN,iCACE,sCACA,wBACG/B,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,KAAM3C,EAAT,EAASA,GAAT,OACV,wBAAc2C,GAAL3C,EADC,SAKd,MACJ,sCACA,cAAG6B,UAAWC,EAAAA,SAAd,SAA6BJ,KAC7B,0BACE,SAAC,EAAAkB,SAAD,CAAUC,UAAU,uCAApB,UAEG,SAAC,KAAD,sBAUtB,C","sources":["components/service/serviseById.js","webpack://react-homework-template/./src/Pages/SelectedMovie/SelectedMovie.module.css?047e","Pages/SelectedMovie/SelectedMovie.jsx"],"sourcesContent":["import { movieApi } from './serviseBaseApi';\n\nexport const fetchById = async id => {\n  try {\n    const resp = await movieApi.request({\n      url: `/movie/${id}`,\n    });\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section_selected\":\"SelectedMovie_section_selected__Pbaeh\",\"description\":\"SelectedMovie_description__UmasP\",\"overview\":\"SelectedMovie_overview__Xq5yC\",\"thumb_img\":\"SelectedMovie_thumb_img__YTjb5\",\"status\":\"SelectedMovie_status__xv8Ga\",\"nav\":\"SelectedMovie_nav__6nETb\",\"look_it\":\"SelectedMovie_look_it__V-fwu\",\"title\":\"SelectedMovie_title__CYFdw\"};","import { Suspense, useEffect, useState,useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n  \n} from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport { fetchById } from 'components/service/serviseById';\nimport Button from 'components/Button/Button';\nimport css from './SelectedMovie.module.css';\n\nexport default function SelectedMovie() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({ genres: [], poster_path: '' });\n  const location = useLocation();\n  const backLincRef = useRef(location.state?.from ?? '/');\nconsole.log('ID',id)\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!id) return;\n    fetchById(id).then(r => setMovie(r)).catch(e=>console.log(e));\n  }, [id])\n  const { title, poster_path, overview, genres, status, homepage } = movie;\n\n  return (\n    <>\n        <div className=\"bacdrop\">\n          <section className={css.section_selected}>\n            <Container styles={css.container_selected}>\n              <Link to={backLincRef.current} className=\"navLink\">\n                <Button>Go back</Button>\n              </Link>\n              <h1>{title}</h1>\n\n              <div className={css.description}>\n                <div className={css.thumb_img}>\n                  <div>\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                          : defaultImg\n                      }\n                      alt={title}\n                      width={300}\n                    />\n                  </div>\n                  <div className={css.status}>\n                    <h3>\n                      Status: <span>{status}</span>\n                    </h3>\n\n                    {homepage && (\n                      <a href={homepage} target=\"blank\">\n                        <Button styles={css.look_it}>Look it</Button>\n                      </a>\n                    )}\n                  </div>\n\n                  <div className={css.nav}>\n                    <NavLink to=\"cast\" className=\"navLink\">\n                      <Button>Cast</Button>\n                    </NavLink>\n                    <NavLink to=\"reviews\" className=\"navLink\">\n                      <Button>Reviews</Button>\n                    </NavLink>\n                  </div>\n                </div>\n                <div>\n                  {genres.length ? (\n                    <>\n                      <h3>Genres: </h3>\n                      <ul>\n                        {genres.map(({ name, id }) => (\n                          <li key={id}>{name}</li>\n                        ))}\n                      </ul>\n                    </>\n                  ) : null}\n                  <h3>Overview</h3>\n                  <p className={css.overview}>{overview}</p>\n                  <div>\n                    <Suspense fallback={<h2>Loading...</h2>}\n                    >\n                      {<Outlet />}\n                    </Suspense>\n                  </div>\n                </div>\n              </div>\n            </Container>\n          </section>\n        </div>\n    </>\n  );\n}\n"],"names":["fetchById","id","movieApi","url","resp","data","console","log","SelectedMovie","useParams","useState","genres","poster_path","movie","setMovie","location","useLocation","backLincRef","useRef","state","from","useEffect","then","r","catch","e","title","overview","status","homepage","className","css","Container","styles","to","current","Button","src","alt","width","href","target","length","map","name","Suspense","fallback"],"sourceRoot":""}