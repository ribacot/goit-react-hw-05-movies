{"version":3,"file":"static/js/681.ad8cc89d.chunk.js","mappings":"uQAEaA,EAAS,mCAAG,WAAMC,GAAN,gGAEFC,EAAAA,EAAAA,QAAiB,CAClCC,IAAI,UAAD,OAAYF,KAHI,cAEfG,EAFe,yBAKdA,EAAKC,MALS,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,sD,SCDtB,GAAgB,iBAAmB,wCAAwC,YAAc,mCAAmC,SAAW,gCAAgC,UAAY,iCAAiC,OAAS,8BAA8B,IAAM,2BAA2B,QAAU,+BAA+B,MAAQ,8B,SCY9T,SAASC,IAAiB,IAAD,IAC9BP,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAA0BS,EAAAA,EAAAA,UAAS,CAAEC,OAAQ,GAAIC,YAAa,KAA9D,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoBN,EAAAA,EAAAA,UAAS,IAA7B,eAAOO,EAAP,KAAWC,EAAX,KAGMC,GAAcC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAInDC,EAAAA,EAAAA,YAAU,WACHtB,IACLD,EAAUC,GACPuB,MAAK,SAAAC,GAAC,OAAIX,EAASW,EAAb,IACNC,OAAM,SAAAC,GAAC,OAAIrB,QAAQC,IAAIoB,EAAhB,IACVT,GAAM,SAAAU,GAAO,GAAGA,IAAOf,EAAMgB,cAAsB,OAAOhB,EAAMgB,aAAc,IAC9EvB,QAAQC,IAAI,OACZD,QAAQC,IAAI,MAAON,GACpB,GAAE,CAACA,EAAIY,EAAMgB,gBAEd,IAAMC,EAAM,0CAAsCb,GAClDX,QAAQC,IAAI,KAAKU,GACjB,IAAQc,EAA2DlB,EAA3DkB,MAAOnB,EAAoDC,EAApDD,YAAaoB,EAAuCnB,EAAvCmB,SAAUrB,EAA6BE,EAA7BF,OAAQsB,EAAqBpB,EAArBoB,OAAQC,EAAarB,EAAbqB,SAEtD,OACE,+BACE,gBACEC,UAAU,UACVC,MAAO,CACLC,gBAAgB,GAAD,OACbpB,EAAE,4EACuEa,EADvE,KAEE,KANV,UAUE,oBAASK,UAAWG,EAAAA,iBAApB,UACE,UAACC,EAAA,EAAD,CAAWC,OAAQF,EAAAA,mBAAnB,WACE,SAAC,KAAD,CAAMG,GAAItB,EAAYuB,QAASP,UAAU,UAAzC,UACE,SAACQ,EAAA,EAAD,yBAEF,wBAAKZ,KAEL,iBAAKI,UAAWG,EAAAA,YAAhB,WACE,iBAAKH,UAAWG,EAAAA,UAAhB,WACE,0BACE,gBACEM,IACEhC,EAAW,0CAC4BA,GAzCzD,8EA4CgBiC,IAAKd,EACLe,MAAO,SAGX,iBAAKX,UAAWG,EAAAA,OAAhB,WACE,sCACU,0BAAOL,OAGhBC,IACG,cAAGa,KAAMb,EAAUc,OAAO,QAA1B,UACE,SAACL,EAAA,EAAD,CAAQH,OAAQF,EAAAA,QAAhB,2BAIR,iBAAKH,UAAWG,EAAAA,IAAhB,WACE,SAAC,KAAD,CACEG,GAAG,OACHpB,MAAO,CAAEC,KAAMP,GACfoB,UAAU,UAHZ,UAKE,SAACQ,EAAA,EAAD,sBAEF,SAAC,KAAD,CACEF,GAAG,UACHpB,MAAO,CAAEC,KAAMP,GACfoB,UAAU,UAHZ,UAKE,SAACQ,EAAA,EAAD,+BAIN,2BACGhC,EAAOsC,QACN,iCACE,sCACA,wBACGtC,EAAOuC,KAAI,gBAAGC,EAAH,EAAGA,KAAMlD,EAAT,EAASA,GAAT,OACV,wBAAckD,GAALlD,EADC,SAKd,MACJ,sCACA,cAAGkC,UAAWG,EAAAA,SAAd,SAA6BN,KAC7B,0BACE,SAAC,EAAAoB,SAAD,CAAUC,UAAU,uCAApB,UACG,SAAC,KAAD,sBAUpB,C","sources":["components/service/serviseById.js","webpack://react-homework-template/./src/Pages/SelectedMovie/SelectedMovie.module.css?047e","Pages/SelectedMovie/SelectedMovie.jsx"],"sourcesContent":["import { movieApi } from './serviseBaseApi';\n\nexport const fetchById = async id => {\n  try {\n    const resp = await movieApi.request({\n      url: `/movie/${id}`,\n    });\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section_selected\":\"SelectedMovie_section_selected__Pbaeh\",\"description\":\"SelectedMovie_description__UmasP\",\"overview\":\"SelectedMovie_overview__Xq5yC\",\"thumb_img\":\"SelectedMovie_thumb_img__YTjb5\",\"status\":\"SelectedMovie_status__xv8Ga\",\"nav\":\"SelectedMovie_nav__6nETb\",\"look_it\":\"SelectedMovie_look_it__V-fwu\",\"title\":\"SelectedMovie_title__CYFdw\"};","import { Suspense, useEffect, useState, useRef} from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport { fetchById } from 'components/service/serviseById';\nimport Button from 'components/Button/Button';\nimport css from './SelectedMovie.module.css';\n\nexport default function SelectedMovie() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({ genres: [], poster_path: '' });\n  const location = useLocation();\n  const [bg, setBg] = useState('');\n\n\n  const backLincRef = useRef(location.state?.from ?? '/');\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!id) return;\n    fetchById(id)\n      .then(r => setMovie(r))\n      .catch(e => console.log(e));\n    setBg(prev=>{if(prev===movie.backdrop_path)return ;return movie.backdrop_path});\n    console.log('use');\n    console.log('id:', id);\n  }, [id, movie.backdrop_path]);\n\n  const bgPath = `https://image.tmdb.org/t/p/w300/${bg}`;\n  console.log('bg',bg)\n  const { title, poster_path, overview, genres, status, homepage } = movie;\n\n  return (\n    <>\n      <div\n        className=\"bacdrop\"\n        style={{\n          backgroundImage: `${\n            bg\n              ? `linear-gradient(rgba(46, 47, 66, 0.7), rgba(46, 47, 66, 0.7)),url(${bgPath})`\n              : ''\n          }`,\n        }}\n      >\n        <section className={css.section_selected}>\n          <Container styles={css.container_selected}>\n            <Link to={backLincRef.current} className=\"navLink\">\n              <Button>Go back</Button>\n            </Link>\n            <h1>{title}</h1>\n\n            <div className={css.description}>\n              <div className={css.thumb_img}>\n                <div>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                        : defaultImg\n                    }\n                    alt={title}\n                    width={300}\n                  />\n                </div>\n                <div className={css.status}>\n                  <h3>\n                    Status: <span>{status}</span>\n                  </h3>\n\n                  {homepage && (\n                      <a href={homepage} target=\"blank\">\n                        <Button styles={css.look_it}>Look it</Button>\n                      </a>\n                    )}\n                </div>\n                <div className={css.nav}>\n                  <NavLink\n                    to=\"cast\"\n                    state={{ from: location }}\n                    className=\"navLink\"\n                  >\n                    <Button>Cast</Button>\n                  </NavLink>\n                  <NavLink\n                    to=\"reviews\"\n                    state={{ from: location }}\n                    className=\"navLink\"\n                  >\n                    <Button>Reviews</Button>\n                  </NavLink>\n                </div>\n              </div>\n              <div>\n                {genres.length ? (\n                  <>\n                    <h3>Genres: </h3>\n                    <ul>\n                      {genres.map(({ name, id }) => (\n                        <li key={id}>{name}</li>\n                      ))}\n                    </ul>\n                  </>\n                ) : null}\n                <h3>Overview</h3>\n                <p className={css.overview}>{overview}</p>\n                <div>\n                  <Suspense fallback={<h2>Loading...</h2>}>\n                    {<Outlet />}\n                  </Suspense>\n                </div>\n              </div>\n            </div>\n          </Container>\n        </section>\n      </div>\n    </>\n  );\n}\n"],"names":["fetchById","id","movieApi","url","resp","data","console","log","SelectedMovie","useParams","useState","genres","poster_path","movie","setMovie","location","useLocation","bg","setBg","backLincRef","useRef","state","from","useEffect","then","r","catch","e","prev","backdrop_path","bgPath","title","overview","status","homepage","className","style","backgroundImage","css","Container","styles","to","current","Button","src","alt","width","href","target","length","map","name","Suspense","fallback"],"sourceRoot":""}